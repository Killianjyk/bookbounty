services:
  - docker:dind

stages:
  - test
  - build
  - deploy

lint-test-job:
  image: python:3-bullseye
  stage: test
  script:
    - pip install flake8
    - flake8 api
  only:
    - main

api-unit-tests-job:
  image: python:3-bullseye
  stage: test
  needs:
    - lint-test-job
  variables:
    MONGO_USER: "DOESNOTMATTER"
    MONGO_PASSWORD: "DOESNOTMATTER"
    MONGO_HOST: "DOESNOTMATTER"
    MONGO_DB: "DOESNOTMATTER"
    SIGNING_KEY: "DOESNOTMATTER"
  script:
    - cd api
    - pip install -r requirements.txt
    - python -m pytest
  only:
    - main

# Build the React/JavaScript front-end
build-front-end-job:
  stage: build
  only:
    - main
  image: node:lts-bullseye
  needs:
    - lint-test-job
    - api-unit-tests-job
  variables:
    PUBLIC_URL: https://mod-3-group.gitlab.io/bookbounty
    REACT_APP_API_HOST: https://bookbounty-api.feb-b-6.mod3projects.com/
  script:
    - cd ghi
    - npm install
    - npm run build
    - cp build/index.html build/404.html
  artifacts:
    paths:
      - ghi/build/

# Deploy the React/JavaScript front-end to GitLab pages
pages:
  stage: deploy
  only:
    - main
  dependencies:
    - build-front-end-job
  needs:
    - build-front-end-job
  script:
    - mv ghi/build/ public
  artifacts:
    paths:
      - public

build-api:
  # stage: build
  # image: docker:git
  # variables:
  #   GITLAB_IMAGE: ${CI_REGISTRY_IMAGE}/api_image
  # before_script:
  #   # $CI_JOB_TOKEN is variable automatically added by Gitlab: see https://docs.gitlab.com/ee/ci/variables/predefined_variables.html#variables-reference
  #   - echo $CI_JOB_TOKEN | docker login -u gitlab-ci-token registry.gitlab.com --password-stdin
  # script:
  #   - docker build --tag $GITLAB_IMAGE:latest ./api
  #   - docker push $GITLAB_IMAGE:latest# Build Sample Service:
    image: docker:19.03.1
    stage: build
    services:
      - docker:19.03.1-dind
    before_script:
      - export DOCKER_REGISTRY_USER=$CI_REGISTRY_USER # built-in GitLab Registry User
      - export DOCKER_REGISTRY_PASSWORD=$CI_REGISTRY_PASSWORD # built-in GitLab Registry Password
      - export DOCKER_REGISTRY_URL=$CI_REGISTRY # built-in GitLab Registry URL
      - export COMMIT_HASH=$CI_COMMIT_SHA # Your current commit sha
      - export IMAGE_NAME_WITH_REGISTRY_PREFIX=$CI_REGISTRY_IMAGE # Your repository prefixed with GitLab Registry URL
      - docker login -u "$DOCKER_REGISTRY_USER" -p "$DOCKER_REGISTRY_PASSWORD" $DOCKER_REGISTRY_URL # Instructs GitLab to login to its registry

    script:
      - cd ./api
      - echo "Building..." # MAKE SURE NO SPACE ON EITHER SIDE OF = IN THE FOLLOWING LINE
      - export CONTAINER_FULL_IMAGE_NAME_WITH_TAG=$IMAGE_NAME_WITH_REGISTRY_PREFIX/api:$COMMIT_HASH
      - docker build -f ./Dockerfile --pull -t api .
      - docker tag api "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
      - docker push "$CONTAINER_FULL_IMAGE_NAME_WITH_TAG"
      - echo $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
      - echo "Deploying on CapRover..."
      - docker run caprover/cli-caprover:v2.1.1 caprover deploy --caproverUrl $CAPROVER_URL --caproverPassword $CAPROVER_PASSWORD --caproverApp $CAPROVER_APP --imageName $CONTAINER_FULL_IMAGE_NAME_WITH_TAG
    only:
      - main
